services:
  # PostgreSQL Database
  postgres:
    image: postgres:latest
    container_name: facebook-scraper-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME:-scraper_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-scraper_password}
      POSTGRES_DB: ${DB_NAME:-facebook_scraper}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - scraper-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-scraper_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Facebook Scraper Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: facebook-scraper-app
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      # Application
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 8002

      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-scraper_user}
      DB_PASSWORD: ${DB_PASSWORD:-scraper_password}
      DB_NAME: ${DB_NAME:-facebook_scraper}
      DB_SYNCHRONIZE: ${DB_SYNCHRONIZE:-true}
      DB_LOGGING: ${DB_LOGGING:-false}

      # Facebook Credentials
      FACEBOOK_EMAIL: ${FACEBOOK_EMAIL}
      FACEBOOK_PASSWORD: ${FACEBOOK_PASSWORD}

      # Scraper Configuration
      DEBUG: ${DEBUG:-false}
      BROWSER_HEADLESS: ${BROWSER_HEADLESS:-true}
      TEST_GROUP_ID: ${TEST_GROUP_ID}

      # Chrome Configuration for Docker
      CHROME_BIN: /usr/bin/google-chrome-stable
      DISPLAY: :99
    volumes:
      - cookies_data:/app/cookies
      - ./debug:/app/debug
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - scraper-network
    # For Chrome to run in headless mode in Docker
    shm_size: 2gb
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8002', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3

volumes:
  postgres_data:
    driver: local
  cookies_data:
    driver: local

networks:
  scraper-network:
    driver: bridge
